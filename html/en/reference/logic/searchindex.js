Search.setIndex({envversion:42,terms:{represent:[3,1,6,2],code:[3,1],illustr:[1,2,3,4,5,6],global:[4,3],prefix:[1,2],follow:[4,1,6,2],abid:[6,2],row:[4,2],privat:3,depend:1,elsewher:1,abra:2,to_infix:2,sent:[4,2],everi:2,string:[4,1,5,6,2],fals:[1,2,3,4,5,6],sage:[1,2,3,4,5,6],worst:2,convert_opt:2,list:[1,2,3,4,5,6],get_next_op:2,pleas:2,pase:1,impli:2,cadabra:2,consequ:6,second:[4,3],truthtabl:[4,3,6,2],pass:[1,2],index:[0,2],xor:[6,2],appear:[4,3,1,2],compar:[6,2],neg:[3,2],rval:4,espresso:4,current:4,version:[1,2,3,4,5,6],"new":[4,1,2],method:[4,2],full:[1,6,2],satisfi:[6,2],along:[3,2],modifi:[0,5],valu:[1,2,3,4,5,6],search:0,convers:2,amount:[3,2],chang:5,propcalc:[3,1,6,2],semant:[1,6,2],vdict:5,appli:[4,1,6,2],modul:[0,2],prefer:2,"boolean":0,valid_consequ:6,get_bit:[4,2],get_tre:1,from:[4,1,6,2],would:3,prove:4,distinct:1,doubl:1,two:[4,1,2],next:2,call:[4,3,6,2],taken:[4,2],more:1,relat:1,benchmark:2,trail:[6,2],eval_iff_op:4,examin:2,staement:4,must:[4,6,2],tabular:3,none:[4,1,2],is_satisfi:[6,2],reduce_mono:4,work:2,can:[1,2,3,4,5,6],purpos:1,proof:1,get_formula:6,malform:[4,6,2],var_valu:2,accept:3,high:2,hline:3,occur:[3,1,2],alwai:2,end:[4,3,6,2],anoth:2,eval_or_op:4,how:[4,3,1,5,2],eval_mon_op:4,recoveri:1,simpl:1,chri:[1,2,3,4,5,6],updat:[1,2,3,4,5,6],algebra:[6,2],tack:4,mai:[1,6,2],multipl:1,underscor:[4,6,2],associ:2,demonstr:[1,6],man:[3,2],essenti:3,correspond:[4,3,5,2],element:[5,2],issu:2,alias:2,"switch":1,combin:[4,2],hoo:2,exclus:2,first:[4,2],order:[4,3,1,6,2],origin:2,satformat:2,over:2,is_tautolog:[6,2],vari:2,letex:3,paramet:[4,1,2],conjunct:[6,2],binari:[4,3,1,2],them:2,"return":[1,2,3,4,5,6],thei:[4,1,2],python:1,lval:4,initi:[1,2,3,4,5,6],front:4,now:[4,1,6,2],nor:2,name:[4,3,6,2],nameerror:[6,2],iff:2,eval_ifthen_op:4,truth:[4,3,1,6,2],each:[3,1,2],found:4,side:[5,2],replac:4,monoton:4,eval_bin_op:4,our:5,out:2,variabl:[1,2,3,4,5,6],space:2,cparen:4,print:[4,3],formula:0,apply_func:[1,2],manipul:[4,2],given:[4,3,5,6,2],base:[4,2],dictionari:[4,5,2],infix:[1,2],traceback:[4,6,2],recov:1,turn:[1,2],length:[4,1],place:4,assign:[5,2],lambda:1,prefix_tre:1,rang:[3,2],onc:[3,2],arrai:[4,3,2],number:[4,2],alreadi:2,size:2,differ:6,convent:[6,2],exponenti:[4,2],tok:[4,1],necessarili:2,monkei:[3,2],vars_ord:4,proposit:0,reduce_op:2,store:3,low:2,statement:[4,3,1,6,2],part:4,pars:[0,5,2],eval_f:5,than:3,greenberg:6,convert_cnf_recur:[6,2],provid:3,tree:[0,5,2],charact:[4,5],convert_express:2,str:2,were:4,typic:2,boolformula:[6,2],argument:[3,1,2],prase:1,have:2,notimplementederror:4,boolev:[5,6],sat:2,statement1:4,equival:[3,6,2],self:2,note:2,also:[4,6,2],take:[4,2],which:[4,3,1,2],singl:[4,1,2],to_infix_intern:1,simplifi:[4,1],begin:[3,6,2],unless:[1,2],distribut:2,normal:[6,2],full_tre:[1,2],object:[4,3,2],most:[4,1,6,2],letter:[4,6,2],pair:[4,1,2],alpha:4,"class":[4,3,2],latex:3,doe:2,clean:1,gracefulli:2,show:[3,6,2],syntaxerror:[6,2],alphanumer:[6,2],recover_formula:1,syntax:[4,1,6,2],find:[3,1,2],involv:2,onli:[4,3,6,2],explicitli:[6,2],should:2,meant:1,get:3,express:[0,2],cannot:2,increas:2,requir:[4,2],satlib:2,recover_formula_intern:1,bad:[6,2],integr:4,contain:[1,2,3,4,5,6],where:[4,3,1,2],set:[4,1,6,2],see:[4,2],result:[4,5,2],arg:4,close:2,eval_ltor_tok:4,pointer:4,"import":[4,3,1,5,2],accord:5,syntact:[1,2],kei:[4,5],numer:[4,3],screen:3,entir:2,come:1,popul:4,print_tabl:4,dist_or:2,last:[4,6,2],equal:[6,2],instanc:[3,1,6,2],prefix_to_infix:1,reduce_bin:4,whole:4,cancel:1,respect:4,ifthen:[6,2],evalu:0,nonsens:3,three:[4,5],been:2,bool_opt:2,eval_formula:5,convert:[1,6,2],ani:[3,2],llll:3,togeth:4,func:1,input:[1,2,3,4,5,6],"case":2,look:3,tree_pars:1,"while":2,error:[4,3,1,6,2],get_table_list:3,oper:[4,1,5,6,2],author:[1,2,3,4,5,6],perform:[1,2],make:2,shorten:4,handl:[1,2],infer:1,polish_pars:1,nest:[1,2],implement:4,dist_not:2,recent:[4,6,2],off:3,entri:1,thu:3,polish_not:2,well:[0,2],parenthes:[4,6,2],exampl:[1,2,3,4,5,6],thi:[1,2,3,4,5,6],left:4,unari:1,identifi:[6,2],human:[3,2],polish:[1,2],paul:[1,2,3,4,5,6],blow:2,is_contradict:[6,2],easi:3,other:[4,6,2],inner:4,eval_and_op:4,determin:[4,6,2],stein:[4,3],format:[1,2,3,4,5,6],convert_cnf:2,boolopt:6,bit:[4,2],parse_ltor:1,like:3,arbitrari:3,contradict:[4,6,2],negat:1,integ:[4,1,2],michael:6,either:[1,5],lrtok:4,output:[1,2,3,4,5,6],page:[0,3],www:2,right:[4,2],symboliclog:4,eval_op:5,some:[6,2],intern:[4,1],guarante:2,logicpars:[1,6,2],librari:4,lead:[6,2],token:[4,1],prop:2,cnf:2,larg:2,previou:1,run:3,scurek:[1,2,3,4,5,6],ltor:4,column:[3,2],add_stat:2,produc:1,gorecki:[1,2,3,4,5,6],effici:1,compos:1,calculu:0,inclus:2,logict:[3,6,2],log:4,wai:6,"long":2,start:[4,6,2],reli:4,includ:2,oparen:4,"var":4,"function":[4,1,2],creation:[4,2],statement2:4,form:[0,2],tupl:2,atom:1,"true":[1,2,3,4,5,6],count:3,notat:2,made:2,consist:[4,6,2],possibl:6,"default":[4,3,1,2],convert_cnf_t:[6,2],creat:[4,0,2],"int":4,repres:[4,1,5,2],"3fe":4,check:2,when:[4,3,1,2],detail:2,invalid:[4,6,2],valid:6,branch:[1,5,2],test:4,node:1,tautolog:[4,6,2],repeat:1,exp:2,booleanformula:[1,6,2],docstr:[1,2,3,4,5,6],william:[4,3],eval:4,ubc:2,longer:3,algorithm:4,descript:2,rule:2,time:[4,2]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:method"},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","method","Python method"]},filenames:["index","sage/logic/logicparser","sage/logic/boolformula","sage/logic/logictable","sage/logic/logic","sage/logic/booleval","sage/logic/propcalc"],titles:["Symbolic Logic","Module that creates and modifies parse trees of well formed boolean formulas.","Boolean Formulas","Logic Tables","Symbolic Logic Expressions","Evaluation of Boolean Formulas","Propositional Calculus"],objects:{"sage.logic.logictable":{Truthtable:[3,2,1,""]},"sage.logic.logictable.Truthtable":{get_table_list:[3,3,1,""]},"sage.logic.logic":{get_bit:[4,1,1,""],eval_ltor_toks:[4,1,1,""],reduce_bins:[4,1,1,""],eval_or_op:[4,1,1,""],SymbolicLogic:[4,2,1,""],eval_mon_op:[4,1,1,""],eval_iff_op:[4,1,1,""],eval_ifthen_op:[4,1,1,""],eval_bin_op:[4,1,1,""],eval:[4,1,1,""],tokenize:[4,1,1,""],eval_and_op:[4,1,1,""],reduce_monos:[4,1,1,""]},"sage.logic.booleval":{eval_f:[5,1,1,""],eval_op:[5,1,1,""],eval_formula:[5,1,1,""]},"sage.logic.propcalc":{valid_consequence:[6,1,1,""],consistent:[6,1,1,""],get_formulas:[6,1,1,""],formula:[6,1,1,""]},"sage.logic.boolformula.BooleanFormula":{satformat:[2,3,1,""],convert_expression:[2,3,1,""],ifthen:[2,3,1,""],get_bit:[2,3,1,""],is_tautology:[2,3,1,""],convert_cnf_table:[2,3,1,""],to_infix:[2,3,1,""],truthtable:[2,3,1,""],reduce_op:[2,3,1,""],is_contradiction:[2,3,1,""],convert_cnf:[2,3,1,""],evaluate:[2,3,1,""],equivalent:[2,3,1,""],dist_ors:[2,3,1,""],convert_opt:[2,3,1,""],is_satisfiable:[2,3,1,""],dist_not:[2,3,1,""],convert_cnf_recur:[2,3,1,""],implies:[2,3,1,""],add_statement:[2,3,1,""],polish_notation:[2,3,1,""],tree:[2,3,1,""],full_tree:[2,3,1,""],get_next_op:[2,3,1,""],iff:[2,3,1,""]},"sage.logic.logic.SymbolicLogic":{prove:[4,3,1,""],print_table:[4,3,1,""],simplify:[4,3,1,""],combine:[4,3,1,""],statement:[4,3,1,""],truthtable:[4,3,1,""]},"sage.logic.logicparser":{apply_func:[1,1,1,""],parse_ltor:[1,1,1,""],recover_formula:[1,1,1,""],recover_formula_internal:[1,1,1,""],polish_parse:[1,1,1,""],parse:[1,1,1,""],prefix_to_infix:[1,1,1,""],tokenize:[1,1,1,""],to_infix_internal:[1,1,1,""],get_trees:[1,1,1,""],tree_parse:[1,1,1,""]},"sage.logic":{propcalc:[6,0,0,"-"],logicparser:[1,0,0,"-"],boolformula:[2,0,0,"-"],booleval:[5,0,0,"-"],logictable:[3,0,0,"-"],logic:[4,0,0,"-"]},"sage.logic.boolformula":{BooleanFormula:[2,2,1,""]}},titleterms:{todo:4,creat:1,evalu:5,tree:1,symbol:[4,0],express:4,well:1,indic:0,tabl:[0,3],"boolean":[1,5,2],pars:1,calculu:6,form:1,logic:[4,0,3],formula:[1,5,2],proposit:6,modifi:1,modul:1}})